KineticCanvas
  canvasDetails {
    isdraggable       bool
    kineticStageObj {
      connector {
        status          '' or 'drawing'
        anchor          Kinetic.Circle that is the starting endpoint
        line            Kinetic.Line that is being drawn
      }
    }
  }

Circle : Connector  (considered a special type of Kinetic.Circle)  {
  connections []      All Kinetic.Line objects connected here
}

Line : Connection   (considered a special type of Kinetic.Line) {
  connector {
    start             Kinetic.Circle that we are drawn from (non-arrow end)
    end               Kinetic.Circle that we are drawn to (arrow end)
  }
  selected            bool  (is the object currently selected)
}

Group : Element    (considered a special type of Kinetic.Group) {
  selected            bool  (is the object currently selected)
  element             object  (the original element that was used to create the Kinetic element)
}

Any element {
  droppable           bool      (can have shapes dropped on it)
  droppableElementTypes []      string[]  (the element types that may be dropped, or 'Any' if anything is accepted)
  originalStrokeWidth int       (the original width of the shape)
}


Element Types:
  Category
  DataElement
  LogicalOperator
  TemporalOperator
  ValueSet
  Term
  Phenotype

Allowed drop targets:
  Category / DataElement
    Term Drop
      - ValueSet, Term, Phenotype
  LogicalOperator
    - Category, DataElement, LogicalOperator
  TemporalOperator
    - Category, DataElement, LogicalOperator, Phenotype